import { useState } from "react";
import axios from "axios";
import "../styles/UserModal.css";

const UserModal = ({ onClose, onUserAdded }) => {
  // –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ä–æ–ª–∏
  const roles = [
    { value: "admin", label: "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä" },
    { value: "teacher", label: "–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å" },
    { value: "student", label: "–°—Ç—É–¥–µ–Ω—Ç" }
  ];

  const [formData, setFormData] = useState({
    fullName: "",
    photo: null,
    role: "",
    phone: "",
    login: "",
    password: "",
    email: "",
    passportSeries: "",
    passportNumber: "",
  });

  const [loading, setLoading] = useState(false);
  const [errorMessage, setErrorMessage] = useState("");

  const handleChange = (e) => {
    const { name, value } = e.target;
    setFormData({ ...formData, [name]: value });
  };

  const handleFileChange = (e) => {
    setFormData({ ...formData, photo: e.target.files[0] });
  };

  const handleSubmit = async (e) => {
    e.preventDefault();

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è
    if (!formData.fullName || !formData.role || !formData.phone || !formData.login || !formData.password || !formData.email) {
      setErrorMessage("–í—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∑–∞–ø–æ–ª–Ω–µ–Ω—ã!");
      return;
    }

    setLoading(true);
    setErrorMessage("");

    try {
      let response;
      if (formData.photo) {
        // –ï—Å–ª–∏ —Ñ–æ—Ç–æ –≤—ã–±—Ä–∞–Ω–æ, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º `multipart/form-data`
        const userData = new FormData();
        Object.keys(formData).forEach((key) => {
          if (formData[key]) {
            userData.append(key, formData[key]);
          }
        });

        console.log("üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö —Å —Ñ–æ—Ç–æ:", Object.fromEntries(userData));

        response = await axios.post("http://localhost:5001/api/users", userData, {
          headers: { "Content-Type": "multipart/form-data" },
        });
      } else {
        // –ï—Å–ª–∏ —Ñ–æ—Ç–æ –Ω–µ—Ç, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±—ã—á–Ω—ã–π JSON
        const userData = { ...formData };
        delete userData.photo; // –ù–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º `photo`, –µ—Å–ª–∏ –æ–Ω–æ –Ω–µ –≤—ã–±—Ä–∞–Ω–æ

        console.log("üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –±–µ–∑ —Ñ–æ—Ç–æ:", userData);

        response = await axios.post("http://localhost:5001/api/users", userData, {
          headers: { "Content-Type": "application/json" },
        });
      }

      console.log("‚úÖ –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:", response.data);

      onUserAdded(); // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–∞–±–ª–∏—Ü—É
      onClose(); // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    } catch (error) {
      console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:", error.response?.data || error.message);
      setErrorMessage(error.response?.data?.message || "–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è");
    } finally {
      setLoading(false);
    }
  };

  return (
    <div className="modal-overlay">
      <div className="modal-content">
        <h2>–î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</h2>
        {errorMessage && <p className="error-message">{errorMessage}</p>}
        <form onSubmit={handleSubmit}>
          <input type="text" name="fullName" placeholder="–§–ò–û *" value={formData.fullName} onChange={handleChange} required />
          <div className="imagerole-fields">
            <input type="file" accept="image/*" onChange={handleFileChange} />
            <select name="role" value={formData.role} onChange={handleChange} required>
              <option value="">–í—ã–±–µ—Ä–∏—Ç–µ —Ä–æ–ª—å *</option>
              {roles.map((role) => (
                <option key={role.value} value={role.value}>{role.label}</option>
              ))}
            </select>
          </div>
          <input type="text" name="phone" placeholder="–¢–µ–ª–µ—Ñ–æ–Ω *" value={formData.phone} onChange={handleChange} required />
          <div className="loginpassword-fields">
            <input type="text" name="login" placeholder="–õ–æ–≥–∏–Ω *" value={formData.login} onChange={handleChange} required />
            <input type="password" name="password" placeholder="–ü–∞—Ä–æ–ª—å *" value={formData.password} onChange={handleChange} required />
          </div>
          <input type="email" name="email" placeholder="Email *" value={formData.email} onChange={handleChange} required />
          <div className="passport-fields">
            <input type="text" name="passportSeries" placeholder="–°–µ—Ä–∏—è –ø–∞—Å–ø–æ—Ä—Ç–∞" value={formData.passportSeries} onChange={handleChange} />
            <input type="text" name="passportNumber" placeholder="–ù–æ–º–µ—Ä –ø–∞—Å–ø–æ—Ä—Ç–∞" value={formData.passportNumber} onChange={handleChange} />
          </div>
          <button type="submit" disabled={loading}>{loading ? "–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ..." : "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å"}</button>
          <button type="button" onClick={onClose} className="close-btn">–û—Ç–º–µ–Ω–∞</button>
        </form>
      </div>
    </div>
  );
};

export default UserModal;
